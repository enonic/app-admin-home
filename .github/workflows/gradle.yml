name: Gradle Build

on:
  push:
  workflow_dispatch:

concurrency: build-${{ github.ref }}

jobs:
  publish_vars:
    runs-on: ubuntu-latest

    outputs:
      publish: ${{ steps.publish_vars.outputs.release != 'true' && (env.ACTUAL_GITHUB_REF == 'refs/heads/master' || startsWith(env.ACTUAL_GITHUB_REF, 'refs/heads/7.')) }}
      repo: ${{ steps.publish_vars.outputs.repo }}

    steps:
      - name: Extract actual github.ref
        run: echo "ACTUAL_GITHUB_REF=${ACTUAL_REF}" >> $GITHUB_ENV
        env:
          ACTUAL_REF: ${{ github.ref }}

      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Get publishing variables
        id: publish_vars
        uses: enonic/release-tools/publish-vars@master
        env:
          PROPERTIES_PATH: './gradle.properties'

  build:
    runs-on: ubuntu-latest

    needs: publish_vars

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Prepare Gradle Arguments
        run: |
          BASE_ARGS="--refresh-dependencies build"
          PUBLISH_ARGS="publish -Pcom.enonic.xp.app.production=true -PrepoKey=${{ needs.publish_vars.outputs.repo }} -PrepoUser=ci -PrepoPassword=${{ secrets.ARTIFACTORY_PASSWORD }}"
          if [ "${{ needs.publish_vars.outputs.publish }}" == "true" ]; then
            GRADLE_ARGS="$BASE_ARGS $PUBLISH_ARGS"
          else
            GRADLE_ARGS="$BASE_ARGS"
          fi
          echo "GRADLE_ARGS=$GRADLE_ARGS" >> $GITHUB_ENV

      - name: Build with Gradle
        run: ./gradlew $GRADLE_ARGS

      - uses: actions/upload-artifact@v4
        with:
          name: app-main
          path: build/libs/app-main.jar

      - uses: codecov/codecov-action@v5
        continue-on-error: true
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  dispatch:
    needs: [ publish_vars, build ]
    strategy:
      matrix:
        repo: [ "enonic/xp-distro" ]
    runs-on: ubuntu-latest
    if: needs.publish_vars.outputs.publish == 'true'
    steps:
      - name: Workflow Dispatch
        uses: benc-uk/workflow-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repo: ${{ matrix.repo }}
          workflow: gradle.yml

  selenium-test:
    if: github.event.head_commit.message != 'Updated to next SNAPSHOT version'
    strategy:
      fail-fast: false
      matrix:
        suite: [ w_testAdminHomeChrome ]
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - uses: actions/download-artifact@v4
        with:
          name: app-main
          path: build/libs/

      - name: Run Selenium Tests
        id: selenium
        run: ./gradlew --refresh-dependencies :testing:${{ matrix.suite }}

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        if: failure()
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: notif-build-tests
          SLACK_USERNAME: GitHub Actions
          SLACK_TITLE: GitHub Action Failure in Admin Home app
          SLACK_MESSAGE: ${{job.container.id}}
          SLACK_ICON: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
          SLACK_COLOR: ${{ job.status }}

      - uses: actions/upload-artifact@v4
        if: always() && steps.selenium.conclusion != 'skipped'
        with:
          name: 'ui-test-report-${{ matrix.suite }}'
          path: |
            testing/build/reports
